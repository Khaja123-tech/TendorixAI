version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:5.0
    container_name: tendorix-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: tender_system
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - tendorix-network

  # Backend API Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: tendorix-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGO_URI=mongodb://admin:password123@mongo:27017/tender_system?authSource=admin
      - MONGO_DB_NAME=tender_system
      - SECRET_KEY=your-super-secret-key-for-production-change-this
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - AZURE_DOC_INTEL_ENDPOINT=${AZURE_DOC_INTEL_ENDPOINT}
      - AZURE_DOC_INTEL_KEY=${AZURE_DOC_INTEL_KEY}
    depends_on:
      - mongo
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - tendorix-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tendorix-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - tendorix-network

volumes:
  mongo_data:
    driver: local

networks:
  tendorix-network:
    driver: bridge